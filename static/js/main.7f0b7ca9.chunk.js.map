{"version":3,"sources":["components/Header.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","title","id","theme","onClick","toggleTheme","class","Alert","message","TextForm","useState","text","setText","alertMessage","setAlertMessage","showAlert","setTimeout","value","onChange","event","target","placeholder","rows","disabled","toUpperCase","toLowerCase","replace","trim","navigator","clipboard","writeText","split","filter","i","length","App","setTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAIe,SAASA,EAAOC,GAC7B,OACE,wBAAQC,UAAU,SAAlB,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,OAAd,SACE,mBAAGC,KAAK,mBAAR,SAA4BF,EAAMG,UAEpC,qBAAKF,UAAU,SAAf,SACE,+BACE,oBAAIA,UAAU,WAAd,SACE,mBAAGC,KAAK,mBAAmBD,UAAU,WAArC,oBAIF,oBAAIA,UAAU,WAAd,SACE,mBAAGC,KAAK,mBAAmBD,UAAU,WAArC,0BAMN,wBAAQG,GAAG,gBAAgBD,MAAK,kBAA6B,eAAhBH,EAAMK,MAAyB,QAAU,OAAtD,SAAqEC,QAASN,EAAMO,YAApH,SACE,mBAAGC,MAAK,iBAA4B,eAAhBR,EAAMK,MAAyB,MAAQ,iB,MCvBtD,SAASI,EAAT,GAA2B,IAAXC,EAAU,EAAVA,QAC7B,OACE,qBAAKT,UAAU,QAAf,SACGS,I,MCFQ,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,SAASC,EAAUP,GACjBM,EAAgBN,GAChBQ,YAAW,WACTF,EAAgB,MACf,KAEL,OACE,yBAASf,UAAU,YAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,0BACEG,GAAG,aACHe,MAAON,EACPO,SAAU,SAACC,GACTP,EAAQO,EAAMC,OAAOH,QAEvBI,YAAY,qBACZC,KAAM,KAEPT,GAAgB,cAAC,EAAD,CAAOL,QAASK,OAEnC,sBAAKd,UAAU,UAAf,UACE,wBACEwB,UAAWZ,EACXP,QAAS,WACPQ,EAAQD,EAAKa,eACbT,EAAU,6BAJd,mCASA,wBACEQ,UAAWZ,EACXP,QAAS,WACPQ,EAAQD,EAAKc,eACbV,EAAU,6BAJd,mCASA,wBACEQ,UAAWZ,EACXP,QAAS,WACPQ,EACED,EACGe,QAAQ,UAAW,MACnBA,QAAQ,MAAO,KACfC,QAELZ,EAAU,0BATd,iCAcA,wBACEQ,UAAWZ,EACXP,QAAS,WACPQ,EAAQ,IACRG,EAAU,kBAJd,wBASA,wBACEQ,UAAWZ,EACXP,QAAS,WACPwB,UAAUC,UAAUC,UAAUnB,GAC9BI,EAAU,YAJd,0BAUF,sBAAKhB,UAAU,UAAf,UACE,8CACA,8BACGY,EAAKoB,MAAM,MAAMC,QAAO,SAACC,GAAD,OAAOA,KAAGC,OADrC,WACqDvB,EAAKoB,MAAM,MAAMC,QAAO,SAACC,GAAD,OAAOA,KAAGC,OADvF,WACuGvB,EAAKuB,OAD5G,yBC/CKC,MA5Bf,WACE,MAA0BzB,mBAAS,cAAnC,mBAAOP,EAAP,KAAciC,EAAd,KAIA,OACE,sBAAKrC,UAAS,cAASI,GAAvB,UACE,cAAC,EAAD,CAAQF,MAAM,YAAYE,MAAOA,EAAOE,YAL5C,WACE+B,EAAmB,eAAVjC,EAAyB,cAAgB,iBAKhD,cAAC,EAAD,QCHSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.7f0b7ca9.chunk.js","sourcesContent":["import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <h1 className=\"logo\">\r\n          <a href=\"/TextUtils-React\">{props.title}</a>\r\n        </h1>\r\n        <nav className=\"navbar\">\r\n          <ul>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/TextUtils-React\" className=\"nav-link\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/TextUtils-React\" className=\"nav-link\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <button id=\"theme-toggler\" title={`Turn on ${props.theme === 'dark-theme' ? 'light' : 'dark'} mode`} onClick={props.toggleTheme}>\r\n          <i class={`fas fa-${props.theme === 'dark-theme' ? 'sun' : 'moon'}`}></i>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import './Alert.css'\r\nimport React from 'react'\r\n\r\nexport default function Alert({message}) {\r\n  return (\r\n    <div className=\"alert\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Alert from './Alert';\r\nimport './TextForm.css';\r\n\r\nexport default function TextForm() {\r\n  const [text, setText] = useState('');\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  function showAlert(message) {\r\n    setAlertMessage(message);\r\n    setTimeout(() => {\r\n      setAlertMessage('');\r\n    }, 1000);\r\n  }\r\n  return (\r\n    <section className=\"text-form\">\r\n      <div className=\"container\">\r\n        <div className=\"textarea-container\">\r\n          <textarea\r\n            id=\"text-input\"\r\n            value={text}\r\n            onChange={(event) => {\r\n              setText(event.target.value);\r\n            }}\r\n            placeholder=\"Enter your text...\"\r\n            rows={12}\r\n          ></textarea>\r\n          {alertMessage && <Alert message={alertMessage} />}\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button\r\n            disabled={!text}\r\n            onClick={() => {\r\n              setText(text.toUpperCase());\r\n              showAlert('Converted to Upper Case.');\r\n            }}\r\n          >\r\n            Convert to Upper Case\r\n          </button>\r\n          <button\r\n            disabled={!text}\r\n            onClick={() => {\r\n              setText(text.toLowerCase());\r\n              showAlert('Converted to Lower Case.');\r\n            }}\r\n          >\r\n            Convert to Lower Case\r\n          </button>\r\n          <button\r\n            disabled={!text}\r\n            onClick={() => {\r\n              setText(\r\n                text\r\n                  .replace(/ *\\n */g, '\\n')\r\n                  .replace(/ +/g, ' ')\r\n                  .trim()\r\n              );\r\n              showAlert('Removed Extra Spaces.');\r\n            }}\r\n          >\r\n            Remove Extra Spaces\r\n          </button>\r\n          <button\r\n            disabled={!text}\r\n            onClick={() => {\r\n              setText('');\r\n              showAlert('Text cleared.');\r\n            }}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            disabled={!text}\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(text);\r\n              showAlert('Copied!');\r\n            }}\r\n          >\r\n            Copy Text\r\n          </button>\r\n        </div>\r\n        <div className=\"summary\">\r\n          <h2>Text Summary</h2>\r\n          <p>\r\n            {text.split('\\n').filter((i) => i).length} lines, {text.split(/\\s/).filter((i) => i).length} words, {text.length} characters\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  const [theme, setTheme] = useState('dark-theme');\n  function toggleTheme() {\n    setTheme(theme === 'dark-theme' ? 'light-theme' : 'dark-theme');\n  }\n  return (\n    <div className={`App ${theme}`}>\n      <Header title=\"TextUtils\" theme={theme} toggleTheme={toggleTheme} />\n      <TextForm />\n    </div>\n  );\n  // return (\n  //   <Router>\n  //     <div className={`App ${theme}`}>\n  //       <Header title=\"TextUtils\" theme={theme} toggleTheme={toggleTheme} />\n  //       <Switch>\n  //         <Route exact path=\"/\">\n  //           <TextForm />\n  //         </Route>\n  //         <Route exact path=\"/about\">\n  //           <About />\n  //         </Route>\n  //       </Switch>\n  //     </div>\n  //   </Router>\n  // );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}